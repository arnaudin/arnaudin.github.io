// / Append pseudo-classes to a selector(s).
// /
// / @argument {list | string} $inputs
// /   A selector, or list of selectors, to apply the pseudo-class to.
// /
// / @argument {pseudo-class} $pseudo [null]
// /   The pseudo-class to be appended.
// /
// / @return {list}
// /
// / @access private

@function assign-inputs($inputs, $pseudo: null) {
  $list: ();

  @each $input in $inputs {
    $input: unquote($input);
    $input: if($pseudo, $input + ":" + $pseudo, $input);
    $list: append($list, $input, comma);
  }

  @return $list;
}

$text-inputs-list: (
  "[type='color']", "[type='date']", "[type='datetime']", "[type='datetime-local']", "[type='email']", "[type='month']", "[type='number']", "[type='password']", "[type='search']", "[type='tel']", "[type='text']", "[type='time']", "[type='url']", "[type='week']", "input:not([type])", "textarea", );

$all-text-inputs: assign-inputs($text-inputs-list);
$all-text-inputs-active: assign-inputs($text-inputs-list, active);
$all-text-inputs-focus: assign-inputs($text-inputs-list, focus);
$all-text-inputs-hover: assign-inputs($text-inputs-list, hover);


form {
  fieldset {
    border: 0;
    padding: 0;
    margin: 0;
  }

  label {
    display: block;
    font-size: var(--font-size-form-label);
  }

  section {
    margin-bottom: rem(20px);
  }

  input,
  textarea {
    @include element-padding;

    width: 100%;
    margin-top: 0.3rem;
  }

  /* 
  input[type=checkbox] { 
    width: auto;
  }*/
  
  input[type=checkbox] {
    width: 20px;
    position: relative;
    margin: 20px auto;
    label {
      width: 20px;
      height: 20px;
      cursor: pointer;
      position: absolute;
      top: 0;
      left: 0;
      background: #fcfff4;
      background: linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #b3bead 100%);
      border-radius: 4px;
      box-shadow: inset 0 1px 1px white, 0 1px 3px rgba(0, 0, 0, 0.5);
      &:after {
        content: '';
        width: 9px;
        height: 5px;
        position: absolute;
        top: 4px;
        left: 4px;
        border: 3px solid #333;
        border-top: none;
        border-right: none;
        background: transparent;
        opacity: 0;
        transform: rotate(-45deg);
      }
      &:hover::after {
        opacity: 0.5;
      }
    }
    input[type=checkbox] {
      visibility: hidden;
      &:after {
        opacity: 1;
      }
    }
  }

  #{$all-text-inputs} {
    border: 0;
    border-bottom: rem(4px) solid white;
    outline: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    transition: border-bottom-color $timing-interaction;
    background-color: var(--color-form-background);
  }

  #{$all-text-inputs-hover} {
    border: 0;
    border-bottom: rem(4px) solid rgba(black, 0.2);
    transition: border-bottom-color $timing-interaction;
  }

  #{$all-text-inputs-focus},
  #{$all-text-inputs-active} {
    border: 0;
    border-bottom: rem(4px) solid var(--color-cta);
    transition: border-bottom-color $timing-interaction;
  }

  textarea {
    resize: vertical;
    min-height: 3.5rem;
  }
}
